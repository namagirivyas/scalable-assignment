docker exec -it mysql-container1 mysql -u root -p

CREATE DATABASE librarydb;
USE librarydb;


CREATE TABLE IF NOT EXISTS books (
    id INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author VARCHAR(255) NOT NULL,
    isbn VARCHAR(20) UNIQUE NOT NULL,
    published_date DATE,
    available BOOLEAN DEFAULT TRUE
);


INSERT INTO books (title, author, isbn, published_date, available) VALUES
    ('To Kill a Mockingbird', 'Harper Lee', '9780061120084', '1960-07-11', TRUE),
    ('1984', 'George Orwell', '9780451524935', '1949-06-08', TRUE),
    ('Pride and Prejudice', 'Jane Austen', '9780141439518', '1813-01-28', TRUE),
    ('The Great Gatsby', 'F. Scott Fitzgerald', '9780743273565', '1925-04-10', FALSE),
    ('Moby-Dick', 'Herman Melville', '9781503280786', '1851-10-18', TRUE),
    ('War and Peace', 'Leo Tolstoy', '9780199232765', '1869-01-01', TRUE),
    ('The Catcher in the Rye', 'J.D. Salinger', '9780316769488', '1951-07-16', TRUE),
    ('The Hobbit', 'J.R.R. Tolkien', '9780547928227', '1937-09-21', TRUE),
    ('Fahrenheit 451', 'Ray Bradbury', '9781451673319', '1953-10-19', TRUE),
    ('Jane Eyre', 'Charlotte Brontë', '9780142437209', '1847-10-16', TRUE);
	
	
CREATE DATABASE lib_books;

use lib_books;

CREATE TABLE books (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    author VARCHAR(255) NOT NULL,
    isbn VARCHAR(50) UNIQUE NOT NULL,
    available BOOLEAN DEFAULT TRUE
);

INSERT INTO books (title, author, isbn, available) VALUES
('The God of Small Things', 'Arundhati Roy', '9780679772590', TRUE),
('Midnights Children', 'Salman Rushdie', '9780812976533', TRUE),
('Train to Pakistan', 'Khushwant Singh', '9780143065883', TRUE),
('The White Tiger', 'Aravind Adiga', '9781416562603', TRUE),
('A Suitable Boy', 'Vikram Seth', '9780060786526', TRUE),
('In Custody', 'Anita Desai', '9788184000667', TRUE),
('The Guide', 'R.K. Narayan', '9788185986076', TRUE),
('Interpreter of Maladies', 'Jhumpa Lahiri', '9780395927205', TRUE),
('Gitanjali', 'Rabindranath Tagore', '9780143066569', TRUE),
('Malgudi Days', 'R.K. Narayan', '9788185986106', TRUE);
	
	
CREATE DATABASE lib_reservation;

use lib_reservation;

CREATE TABLE reservations (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT NOT NULL,
    book_id BIGINT NOT NULL,
    reservation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    status ENUM('ACTIVE', 'CANCELLED') DEFAULT 'ACTIVE',
    FOREIGN KEY (book_id) REFERENCES lib_books.books(id) ON DELETE CASCADE
);

INSERT INTO reservations (user_id, book_id, reservation_date, status) VALUES
(1, 1, NOW(), 'ACTIVE'),
(2, 2, NOW(), 'ACTIVE'),
(3, 3, NOW(), 'CANCELLED');









mvn clean install
docker build -t eureka-server .
docker run -d --name eureka-server -p 8761:8761 eureka-server or 
docker run -d --name eureka-server -p 8761:8761 --network libnet eureka-server
minikube image load eureka-server:latest


mvn clean install
docker build -t api-gateway .
docker run -d --name api-gateway -p 8765:8765 --network libnet api-gateway

mvn clean install
docker build -t lib-books .
docker run -d --name lib-books -p 8080:8080 --network libnet lib-books

mvn clean install
docker build -t lib-reservation .
docker run -d --name lib-reservation -p 8081:8081 --network libnet lib-reservation

WITH LIBNET
docker run -d --name eureka-server -p 8761:8761 eureka-server
docker run -d --name api-gateway -p 8765:8765 --network libnet api-gateway
docker run -d --name lib-book -p 8080:8080 --network libnet lib-book
docker run -d --name lib-reservation -p 8081:8081 --network libnet lib-reservation


docker network create libnet

docker network connect library-network mysql-container1
docker network connect library-network lib-reservation
docker network connect library-network lib-book


docker-compose up --build




docker run -d --name mysql-container1 --network libnet -e MYSQL_ROOT_PASSWORD=librarypass -e MYSQL_DATABASE=lib_books -p 3306:3306 mysql:latest

docker run -d --name lib-book --network libnet -e MYSQL_HOST=mysql -p 8080:8080 lib-book

docker run -d --name eureka-server -p 8761:8761 --network libnet eureka-server



--- NAMAGIRI-----
docker build -t mysql .

docker run -d --name mysql-container1 \
  -e MYSQL_ROOT_PASSWORD=librarypass \
  -e MYSQL_DATABASE=mysql-container1 \
  -e MYSQL_USER=myuser \
  -e MYSQL_PASSWORD=librarypass \
  -p 3306:3306 \
  mysql:8.0
  
docker exec -it mysql-container1 mysql -u root -p


minikube start

kubectl version
minikube status 

minikube dashboard

#kubectl create deployment eureka-server-deployment --image=eureka-server:latest
kubectl apply –f eureka-deployment.yml





Docker Commands 
docker login -u userid -p "pwd" docker.io

docker login -u namagirivyas1 -p "pwd" docker.io
docker tag eureka-server:latest namagirivyas1/eureka-server:latest
docker push namagirivyas1/eureka-server:latest
kubectl port-forward service/eureka-server 8761:8761

docker login -u namagirivyas1 -p "pwd" docker.io
docker tag api-gateway:latest namagirivyas1/api-gateway:latest
docker push namagirivyas1/api-gateway:latest
kubectl apply –f gateway-deployment.yml
kubectl port-forward service/api-gateway 8765:8765


docker login -u namagirivyas1 -p "pwd" docker.io
docker tag mysql:8.0 namagirivyas1/mysql:8.0
docker push namagirivyas1/mysql:8.0
kubectl apply –f mysql-deployment.yml



$ kubectl get pods
NAME                             READY   STATUS    RESTARTS   AGE
api-gateway-7fd9c89f5-gnxnj      1/1     Running   0          31m
api-gateway-7fd9c89f5-qmctc      1/1     Running   0          31m
api-gateway-7fd9c89f5-x22bd      1/1     Running   0          31m
eureka-server-5b65b844b9-h8qbk   1/1     Running   0          39m
eureka-server-5b65b844b9-k6sx6   1/1     Running   0          39m
eureka-server-5b65b844b9-z9x8w   1/1     Running   0          39m
mysql-77cf95f6fc-pvxv2           1/1     Running   0          5m20s

$ kubectl exec -it mysql-77cf95f6fc-pvxv2 -- mysql -u root -p
Enter password:

mvn clean install
docker build -t lib-books .
docker login -u namagirivyas1 -p "pwd" docker.io
docker tag lib-books:latest namagirivyas1/lib-books:latest
docker push namagirivyas1/lib-books:latest
kubectl apply –f books-deployment.yml
kubectl port-forward service/lib-books 8080:8080

mvn clean install
docker build -t lib-reservation .
docker login -u namagirivyas1 -p "pwd" docker.io
docker tag lib-reservation:latest namagirivyas1/lib-reservation:latest
docker push namagirivyas1/lib-reservation:latest
kubectl apply –f reservation-deployment.yml
kubectl port-forward service/lib-reservation 8081:8081

kubectl exec -it api-gateway-7fd9c89f5-8lctt -- curl http://lib-books:8080